x-global-envs:
  &global-envs
    HOST: 0.0.0.0
    PORT: 80
    PROBLEM_TYPE: regression
    MODEL: tree-regressor
    LABEL: SalePrice
    RANDOM_STATE: 0
    TEST_SIZE: 0.3

services:
    ml-server-a:
        container_name: ml-server-a
        build:
            context: .
            dockerfile: "Dockerfile.server"
        environment:
            <<: *global-envs
            DATA_DIR: data/A
        networks:
            app_network:
                ipv4_address: 192.168.100.10
        stdin_open: true 
        tty: true

    ml-server-b:
        container_name: ml-server-b
        build:
            context: .
            dockerfile: "Dockerfile.server"
        environment:
            <<: *global-envs
            DATA_DIR: data/B
        networks:
            app_network:
                ipv4_address: 192.168.100.11
        stdin_open: true 
        tty: true

    ml-server-c:
        container_name: ml-server-c
        build:
            context: .
            dockerfile: "Dockerfile.server"
        environment:
            <<: *global-envs
            DATA_DIR: data/C
        networks:
            app_network:
                ipv4_address: 192.168.100.12
        stdin_open: true 
        tty: true

networks:
    app_network:
        driver: bridge
        ipam:
            config:
                - subnet: 192.168.100.0/24