x-global-envs: &global-envs
  ML_SERVERS_NUMBER: 4
  PROBLEM_TYPE: regression
  MODEL: house-pricing-tree-regressor
  LABEL: SalePrice
  RANDOM_STATE: 0
  TEST_SIZE: 0.3

services:
    ml-server-1:
        container_name: ml-server-1
        build:
            context: .
            dockerfile: "Dockerfile.server"
        environment:
            <<: *global-envs
            DATA_DIR: data/house_pricing/A
        networks:
            app_network:
                ipv4_address: 192.168.100.10
        ports:
            - "8080:80"
        stdin_open: true
        tty: true

    ml-server-2:
        container_name: ml-server-2
        build:
            context: .
            dockerfile: "Dockerfile.server"
        environment:
            <<: *global-envs
            DATA_DIR: data/house_pricing/B
        networks:
            app_network:
                ipv4_address: 192.168.100.11
        ports:
            - "8081:80"
        stdin_open: true
        tty: true

    ml-server-3:
        container_name: ml-server-3
        build:
            context: .
            dockerfile: "Dockerfile.server"
        environment:
            <<: *global-envs
            DATA_DIR: data/house_pricing/C
        networks:
            app_network:
                ipv4_address: 192.168.100.12
        ports:
            - "8082:80"
        stdin_open: true
        tty: true

    ml-server-4:
        container_name: ml-server-4
        build:
            context: .
            dockerfile: "Dockerfile.server"
        environment:
            <<: *global-envs
            DATA_DIR: data/house_pricing/D
        networks:
            app_network:
                ipv4_address: 192.168.100.13
        ports:
            - "8083:80"
        stdin_open: true
        tty: true

    proxy-1:
        container_name: proxy-1
        build:
            context: .
            dockerfile: "Dockerfile.proxy"
        environment:
            <<: *global-envs
        networks:
            app_network:
                ipv4_address: 192.168.100.20
        ports:
            - "8084:80"
        stdin_open: true
        tty: true

    proxy-2:
        container_name: proxy-2
        build:
            context: .
            dockerfile: "Dockerfile.proxy"
        environment:
            <<: *global-envs
        networks:
            app_network:
                ipv4_address: 192.168.100.21
        ports:
            - "8085:80"
        stdin_open: true
        tty: true

    nginx:
        image: nginx:latest
        container_name: nginx
        ports:
            - "80:80"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf
        networks:
            app_network:
                ipv4_address: 192.168.100.30

networks:
    app_network:
        driver: bridge
        ipam:
            config:
                - subnet: 192.168.100.0/24